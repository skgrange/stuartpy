#!/usr/bin/env python

# Set-up
# Import modules
import os
import xmltodict
import json
import argparse

# Change directory
# os.chdir(os.path.expanduser(working_directory))

# Define arguments
parser = argparse.ArgumentParser()

parser.add_argument("input_file", 
  help = "Required file name of XML file to be converted.", nargs = "+")
                    
parser.add_argument("-o", "--output_file", default = False, 
  help = "Output json file name.")

parser.add_argument("-p", "--pretty", default = True, 
  help = "Should the output be formatted for readability (a pretty output)?")

# Parse arguments
args = parser.parse_args()

# Make a string
input_file = " ".join(args.input_file)

# Ensure path is expanded
input_file = os.path.expanduser(input_file)

# Default output file name
if args.output_file is False: 
  
  # Get things from file name
  directory = os.path.dirname(input_file)
  basename = os.path.basename(input_file)
  output_file = os.path.splitext(basename)[0]
  output_file = os.path.join(directory, output_file + ".json")
  
else:
  
  output_file = args.output_file

# Load document
document_file = open(input_file, "r")
text = document_file.read()

# Parse xml document
xml_object = xmltodict.parse(text)

# Create a json character string
if args.pretty:

  json = json.dumps(xml_object, sort_keys = False, indent = 2, 
    separators = (",", ": "))
  
else:

  json = json.dumps(xml_object, sort_keys = False, separators = (",", ":"))

# Save json as text
output_file = open(output_file, "w")
output_file.write(json)
output_file.close()
